{
  // WhatsOnTV Codespaces Configuration
  // Optimized for AI-assisted development with Claude CLI + GitHub Copilot
  "name": "WhatsOnTV Development Environment",
  
  // Base image: Node.js 20 with TypeScript support on Debian Bullseye
  "image": "mcr.microsoft.com/devcontainers/typescript-node:1-20-bullseye",
  
  // Additional features to install in the container
  "features": {
    // GitHub CLI for repository management
    "ghcr.io/devcontainers/features/github-cli:1": {},
    
    // Node.js with native compilation support
    "ghcr.io/devcontainers/features/node:1": {
      "nodeGypDependencies": true,  // Support for native modules
      "version": "20"               // LTS version for stability
    }
  },

  // VS Code customizations for optimal TypeScript + AI development
  "customizations": {
    "vscode": {
      // Essential extensions for WhatsOnTV development
      "extensions": [
        // TypeScript development
        "ms-vscode.vscode-typescript-next",    // Latest TypeScript features
        "dbaeumer.vscode-eslint",              // Code quality enforcement
        
        // Additional language support
        "bradlc.vscode-tailwindcss",           // CSS framework support
        "ms-vscode.vscode-json",               // JSON editing
        "redhat.vscode-yaml",                  // YAML support
        
        // AI-powered development (optimized for vibe coding workflow)
        "github.copilot",                      // Inline code suggestions
        "github.copilot-chat",                 // Chat interface
        "github.copilot-labs",                 // Experimental features
        
        // Testing and debugging
        "ms-vscode.test-adapter-converter",    // Test integration
        "hbenl.vscode-test-explorer",          // Test discovery
        "orta.vscode-jest",                    // Jest test runner
        
        // GitHub integration
        "ms-vscode.vscode-github-issue-notebooks", // Issue management
        "github.vscode-github-actions"         // Workflow management
      ],
      // VS Code settings optimized for WhatsOnTV project standards
      "settings": {
        // TypeScript configuration
        "typescript.preferences.importModuleSpecifier": "relative",
        "typescript.updateImportsOnFileMove.enabled": "always",
        
        // ESLint configuration (single source of truth for code style)
        "eslint.workingDirectories": ["."],
        "eslint.validate": ["typescript"],
        "editor.formatOnSave": false,           // ESLint handles formatting
        "editor.codeActionsOnSave": {
          "source.fixAll.eslint": "explicit"   // Auto-fix on save
        },
        
        // Code style (matches project standards)
        "editor.tabSize": 2,                    // 2-space indentation
        "editor.insertSpaces": true,            // Spaces, not tabs
        "editor.rulers": [100],                 // 100-character line limit
        "files.eol": "\n",                     // Unix line endings
        
        // Jest testing configuration
        "jest.autoRun": "off",                 // Manual test execution
        "jest.showCoverageOnLoad": true,       // Show coverage by default
        
        // GitHub Copilot configuration (optimized for manual editing workflow)
        "github.copilot.enable": {
          "*": true,                           // Enable for most file types
          "plaintext": false,                 // Disable for plain text
          "markdown": true,                   // Enable for documentation
          "scminput": false                   // Disable for commit messages
        },
        "github.copilot.advanced": {
          "length": 500,                      // Detailed completions
          "temperature": 0.1                 // Focused, less random suggestions
        },
        
        // Terminal configuration (optimized for vibe coding aliases)
        "terminal.integrated.defaultProfile.linux": "bash",
        "terminal.integrated.profiles.linux": {
          "bash": {
            "path": "/bin/bash",
            "args": ["-l"]                    // Login shell (loads ~/.bashrc)
          }
        }
      }
    }
  },

  // Port forwarding for development servers
  "forwardPorts": [3000, 8080],
  
  // Commands to run during Codespace creation (see setup.sh for details)
  "postCreateCommand": "npm install && npm run build && bash .devcontainer/install-claude.sh",
  
  // Welcome message after Codespace starts
  "postStartCommand": "echo 'WhatsOnTV development environment ready! Run npm start to begin.'",

  // Run as node user (not root) for security
  "remoteUser": "node",
  
  // No file mounts needed - configuration handled via Codespaces environment variables
  // See .devcontainer/ENVIRONMENT-SETUP.md for configuration instructions

  // Environment variables for the container
  // Sensitive values (SLACK_BOT_TOKEN, etc.) should be set as Codespaces secrets
  "containerEnv": {
    "NODE_ENV": "development",        // Development mode
    "TZ": "America/Los_Angeles",      // Timezone for consistent logging
    "TVMAZE_BASE_URL": "https://api.tvmaze.com"  // Public API endpoint
  },

  // Container runtime arguments
  "runArgs": ["--init"]               // Proper signal handling
}
